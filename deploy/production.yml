trigger:
  branches:
    include:
      - master

pool:
  vmImage: "windows-latest"

variables: 
  # nombre del archivo csproj
  name-project: "trifenix_mdm"
  branch: "master"
  user: trifenix
  email: devops@trifenix.io
# github ejecuta este build, para validar y ejecutar,
# es decir, dos veces
# esta instrucci√≥n asigna que no se ejecute en el pull request (para validar).
# sino, que solo se ejecute al modificar la rama.
pr: none


steps:
  
  - task: PowerShell@2
    inputs:
      targetType: 'inline'
      script: |
        dotnet tool install trifenix.versions.console -g
        $currentVersion = trifenix-versions update $(trifenix-versions) --token $(script-token) --user $(user) --email $(email) --branch $(branch) --name $(name-project) --ktype npm --build $(Build.BuildId)        
        $setVersion = '##vso[task.setvariable variable=version;]' + $currentVersion
        Write-Host $setVersion
    displayName: generando variable version con TRIFENIX VERSIONS

  
  - task: NodeTool@0
    inputs:
      versionSpec: "12.x"
    displayName: "Install Node.js"
    

  - task: Npm@1
    inputs:
      command: 'custom'
      customCommand: '--no-git-tag-version version $(version)'
      customRegistry: 'useFeed'
      customFeed: '$(default-feed)'
 

  - task: CopyFiles@2
    inputs:
      sourceFolder: "$(Build.SourcesDirectory)"
      contents: "**"
      targetFolder: $(Build.ArtifactStagingDirectory)/npm
    displayName: "Copy Build"
  
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: "$(Build.ArtifactStagingDirectory)/npm"
      artifactName: npm
    displayName: "Publish npm artifact"
